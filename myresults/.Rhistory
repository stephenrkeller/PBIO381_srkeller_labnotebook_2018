annotatePval=-log10(0.0001),
col=c("darkblue", "gray"),
highlight=gemmaRW$rs[which(gemmaRW$q<0.1)],
main="GWAS: 'GEMMA' on cGDD@BF from 437 inds from the range-wide (maf>0.01)", cex.main=0.9)
dev.off()
pdf("GWAS_gemma_cGDD@BF_2015_2016_VTgard_Core336_MAF01.pdf")
manhattan(gemmaCore4, chr="chr", bp="ps", p="p_wald", snp="rs", logp=T,
suggestiveline=F, genomewideline=F,
annotatePval=-log10(0.0001),
col=c("darkblue", "gray"),
highlight=gemmaCore4$rs[which(gemmaCore4$q<0.1)],
main="GWAS: 'GEMMA' on cGDD@BF from 336 inds from the range-core (maf>0.01)", cex.main=0.9)
dev.off()
qq(gemmaCore4$p_wald, main="gemma: Core, BF 2015 & 2016")
par(mfrow=c(1,2)
qq(gemmaRW$p_wald, main="gemma: RW 437, BF 2015 & 2016")
qq(gemmaCore4$p_wald, main="gemma: Core 336, BF 2015 & 2016")
dev.off()
par(mfrow=c(1,2))
qq(gemmaRW$p_wald, main="gemma: RW 437, BF 2015 & 2016")
qq(gemmaCore4$p_wald, main="gemma: Core 336, BF 2015 & 2016")
dev.off()
par(mfrow=c(1,2))
qq(gemmaRW$p_wald, main="gemma: RW 437, BF 2015 & 2016")
qq(gemmaCore4$p_wald, main="gemma: Core 336, BF 2015 & 2016")
pdf("GWAS_gemma_cGDD@BF_2015_2016_VTgard_qqplots_MAF01.pdf")
par(mfrow=c(1,2))
qq(gemmaRW$p_wald, main="gemma: RW 437, BF 2015 & 2016")
qq(gemmaCore4$p_wald, main="gemma: Core 336, BF 2015 & 2016")
dev.off()
overlap <- gemmaRW$rs[which(gemmaRW$q<0.1 %in% gemmaCore4$q<0.1),]
overlap <- gemmaRW$rs[which(gemmaRW$q<0.1 %in% gemmaCore4$q<0.1)]
overlap <- gemmaRW[which(gemmaRW$q<0.1 %in% gemmaCore4$q<0.1),]
overlap <- which(gemmaRW$q<0.1 %in% gemmaCore4$q<0.1)
RWq0.1 <- gemmaRW[which(gemmaRW$q<0.1),]
Coreq0.1 <- gemmaCore4[which(gemmaCore4$q<0.1),]
overlap <- RWq0.1$rs %in% Coreq0.1$rs
overlap
RWq0.1
dim(RWq0.1)
dim(Coreq0.1)
rs <-unique(rbind(gemmaRW$rs,gemmaCore4$rs))
gemmaRW$rs
rbind(gemmaRW$rs,gemmaCore4$rs)
rs <-unique(rbind(c(gemmaRW$rs,gemmaCore4$rs)))
length(rs)
overlap <- rs[which(RWq0.1$rs %in% Coreq0.1$rs)]
overlap
head(rs)
head(gemmaRW$rs)
head(gemmaCore4$rs)
rs <- gemmaRW$rs
overlap <- rs[which(RWq0.1$rs %in% Coreq0.1$rs)]
overlap
length(overlap)
RWq0.1$rs
RWq0.1 <- drop.levels(gemmaRW[which(gemmaRW$q<0.1),])
RWq0.1 <- droplevels(gemmaRW[which(gemmaRW$q<0.1),])
View(RWq0.1)
Coreq0.1 <- droplevels(gemmaCore4[which(gemmaCore4$q<0.1),])
overlap <- rs[which(RWq0.1$rs %in% Coreq0.1$rs)]
overlap
head(overlap)
overlap <- droplevels(rs[which(RWq0.1$rs %in% Coreq0.1$rs)])
overlap
overlap <- droplevels(rs[which(RWq0.1 %in% Coreq0.1)])
overlap <- rs[which(RWq0.1 %in% Coreq0.1)]
head(overlap)
length(overlap)
str(overlap)
overlap
str(RWq0.1)
str(Coreq0.1)
overlap <- which(RWq0.1 %in% Coreq0.1)
overlap
overlap <- which(RWq0.1$rs %in% Coreq0.1$rs)
overlap
RWq0.1$subset = "RW"
Coreq0.1$subset = "Core"
Outliers <- rbind(RWq0.1, Coreq0.1)
View(Outliers)
tables(Outliers$rs, Outleirs$subset)
table(Outliers$rs, Outleirs$subset)
table(Outliers$rs, Outliers$subset)
table(Outliers$subset)
length(Outliers$rs)
length(unique(Outliers$rs))
103-87
overlap <- Outliers[which(RWq0.1$rs %in% Coreq0.1$rs),]
View(overlap)
View(overlap)
BFclonals.tmp <- coef(BF_cGDD2015_blup)
BFclonals2016.tmp <- coef(BF_cGDD2016_blup)
BFclonals2015.tmp <- coef(BF_cGDD2015_blup)
out2015 <- data.frame(rownames(BFblups2015.tmp$ind_code), BFblups2015.tmp$ind_code[,1], BFclonals2015.tmp[1])
View(out2015)
BFclonals2015.tmp
out2015 <- data.frame(rownames(BFblups2015.tmp$ind_code), BFblups2015.tmp$ind_code[,1], BFclonals2015.tmp[,1])
out2015 <- data.frame(rownames(BFblups2015.tmp$ind_code), BFblups2015.tmp$ind_code[,1], BFclonals2015.tmp$ind_code[,1])
View(out2015)
out2016 <- data.frame(rownames(BFblups2016.tmp$ind_code), BFblups2016.tmp$ind_code[,1], BFclonals2016.tmp$ind_code[,1])
names(out2015)<- c("ind_code", "2015blups", "2015cGDD@BF")
names(out2016)<- c("ind_code", "2016blups", "2016cGDD@BF")
out <- merge(out2015, out2016, all=T)
View(out)
plot(out$2015cGDD@BF,out$2016cGDD@BF)
head(out)
plot(out[,3],out[,5])
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF")
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf")
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
dev.off()
hist(out[,3], col="gray", breaks=20)
par(mfrow=c(1,3))
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf")
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
hist(out[,3], col="gray", breaks=20, ylab="2015 cGDD@BF")
hist(out[,5], col="gray", breaks=20, ylab="2016 cGDD@BF")
dev.off()
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf")
par(mfrow=c(1,3))
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
hist(out[,3], col="gray", breaks=20, ylab="2015 cGDD@BF")
hist(out[,5], col="gray", breaks=20, ylab="2016 cGDD@BF")
dev.off()
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf", height=9, length=15)
par(mfrow=c(1,3))
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
hist(out[,3], col="gray", breaks=20, xlab="2015 cGDD@BF")
hist(out[,5], col="gray", breaks=20, xlab="2016 cGDD@BF")
dev.off()
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf", 9, 15)
par(mfrow=c(1,3))
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
hist(out[,3], col="gray", breaks=20, xlab="2015 cGDD@BF")
hist(out[,5], col="gray", breaks=20, xlab="2016 cGDD@BF")
dev.off()
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf", 15, 8)
par(mfrow=c(1,3))
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
hist(out[,3], col="gray", breaks=20, xlab="2015 cGDD@BF")
hist(out[,5], col="gray", breaks=20, xlab="2016 cGDD@BF")
dev.off()
pdf("ClonalValues_cGDD@BF_20152016_VT.pdf", 15, 8)
par(mfrow=c(1,3))
plot(out[,3],out[,5], xlab="2015 cGDD@BF", ylab="2016 cGDD@BF", main="Clonal values of bud flush in VT")
hist(out[,3], col="gray", breaks=20, xlab="2015 cGDD@BF", xlim=c(200,800), main="2015 cGDD@BF")
hist(out[,5], col="gray", breaks=20, xlab="2016 cGDD@BF", xlim=c(200,800), main="2016 cGDD@BF")
dev.off()
overlap
write.table(overlap, "cGDD@BF_outliers.txt", quote=F)
write.table(Outliers, "cGDD@BF_outliers.txt", quote=F)
write.table(Outliers, "cGDD@BF_outliers.txt", quote=F)
table(Outliers$subset)
View(BFgbsRW)
BFgbsRW <- merge(out, gbsindsRW, by="ind_code", all.y=T)
gbsindsRW <- read.table("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Final_VCF_Data/balsam/no_admix/437inds/437ind.names", header=T)
BFgbsRW <- merge(out, gbsindsRW, by="ind_code", all.y=T)
View(BFgbsRW)
?rand()
?rand
??rand
?sample
randRW25pct <- sample(BFgbsRW$ind_code, 100)
randRW25pct
length(rand)
randRW25pct
length(randRW25pct)
dim(BFgbsRW)
BFgbsRW[which(BFgbsRW$ind_code==randRW25pct),2:5] <- NA
which(BFgbsRW$ind_code==randRW25pct)
which(BFgbsRW$ind_code=randRW25pct)
which(BFgbsRW$ind_code %in% randRW25pct)
test <- BFgbsRW[which(BFgbsRW$ind_code %in% randRW25pct),2:5] <- NA
test
dim(test)
test <- BFgbsRW[which(randRW25pct %in% BFgbsRW$ind_code),2:5] <- NA
dim(test)
hist(-log10(gemmaCore4$p_wald), breaks=50)
which(BFgbsRW$ind_code %in% randRW25pct)
BFgbsRW[which(BFgbsRW$ind_code %in% randRW25pct),2:5]
BFgbsRW[which(BFgbsRW$ind_code %in% randRW25pct),2:5] <- NA
BFgbsRW
BFgbsRW <- merge(out, gbsindsRW, by="ind_code", all.y=T)
randRW25pct <- sample(BFgbsRW$ind_code, 100)
BFgbsRW[which(BFgbsRW$ind_code %in% randRW25pct),2:5] <- NA
View(BFgbsRW)
out2015 <- data.frame(rownames(BFblups2015.tmp$ind_code), BFblups2015.tmp$ind_code[,1], BFclonals2015.tmp$ind_code[,1])
names(out2015)<- c("ind_code", "2015blups", "2015cGDD@BF")
out2016 <- data.frame(rownames(BFblups2016.tmp$ind_code), BFblups2016.tmp$ind_code[,1], BFclonals2016.tmp$ind_code[,1])
names(out2016)<- c("ind_code", "2016blups", "2016cGDD@BF")
out <- merge(out2015, out2016, all=T)
View(out)
gbsindsRW <- read.table("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Final_VCF_Data/balsam/no_admix/437inds/437ind.names", header=T)
gbsindsCore336 <- read.table("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Final_VCF_Data/balsam/no_admix/core_336/336inds", header=F)
colnames(gbsindsCore336)="ind_code"
BFgbsRW <- merge(out, gbsindsRW, by="ind_code", all.y=T)
randRW25pct <- sample(BFgbsRW$ind_code, 100)
BFgbsRW[which(BFgbsRW$ind_code %in% randRW25pct),2:5] <- NA
View(BFgbsRW)
View(out)
BFgbsRW.fam <- merge(plink.fam[,-6], BFgbsRW, by.x="V1", by.y="ind_code", all.y=T)
View(BFgbsRW.fam)
BFgbsRWtrain <- BFgbsRW[which(BFgbsRW$ind_code %in% randRW25pct),2:5] <- NA
BFgbsRW.fam <- merge(plink.fam[,-6], BFgbsRWtrain, by.x="V1", by.y="ind_code", all.y=T)
View(BFgbsRWtrain)
BFgbsRW <- merge(out, gbsindsRW, by="ind_code", all.y=T)
randRW25pct <- sample(BFgbsRW$ind_code, 100)
BFgbsRWtrain <- BFgbsRW
BFgbsRWtrain[which(BFgbsRW$ind_code %in% randRW25pct),2:5] <- NA
View(BFgbsRWtrain)
BFgbsRW.fam <- merge(plink.fam[,-6], BFgbsRWtrain, by.x="V1", by.y="ind_code", all.y=T)
BFgbsRWtrain.fam <- merge(plink.fam[,-6], BFgbsRWtrain, by.x="V1", by.y="ind_code", all.y=T)
write.table(BFgbsRWtrain.fam, "/Volumes/kellrlab/datashare/BalsamPoplar/AssocMapping/GWAS/gemma/BFRW_train.fam", quote=F, sep="\t", row.names=F, col.names=F)
View(BFgbsRWtrain.fam)
head(BFgbsRW)
dim(BFgbsRW)
BFgbsRWtrain.fam2 <- cbind(BFgbsRWtrain.fam, BFgbsRW)
View(BFgbsRWtrain.fam2)
BFgbsRWtrain.fam2 <- merge(BFgbsRWtrain.fam, BFgbsRW, b.x="V1", by.y="ind_code")
BFgbsRWtrain.fam2 <- merge(BFgbsRWtrain.fam, BFgbsRW, by.x="V1", by.y="ind_code")
View(BFgbsRWtrain.fam2)
list.files("output/")
gemma_RWtrain_bslmmpredict <- read.table("output/result.prdt.txt", header=F)
BFgbsRWtrain.fam2$predict = gemma_RWtrain_bslmmpredict
View(BFgbsRWtrain.fam2)
gemma_RWtrain_bslmmpredict
BFgbsRWtrain.fam2$predict <- gemma_RWtrain_bslmmpredict
View(BFgbsRWtrain.fam2)
cbind(BFgbsRWtrain.fam2,gemma_RWtrain_bslmmpredict)
BFgbsRWtrain.fam3 <- cbind(BFgbsRWtrain.fam2,gemma_RWtrain_bslmmpredict)
View(BFgbsRWtrain.fam3)
BFgbsRWtrain.fam2 <- merge(BFgbsRWtrain.fam, BFgbsRW, by.x="V1", by.y="ind_code")
BFgbsRWtrain.fam3 <- cbind(BFgbsRWtrain.fam2,gemma_RWtrain_bslmmpredict)
View(BFgbsRWtrain.fam3)
with(BFgbsRWtrain.fam3, plot([,6],[,14]))
with(BFgbsRWtrain.fam3, plot([6],[14]))
plot <- BFgbsRWtrain.fam3[,c(6,14)]
str(plot)
plot(plot[,1],plot[,2])
View(plot)
plot <- BFgbsRWtrain.fam3[,c(10,14)]
plot(plot[,1],plot[,2])
df <- BFgbsRWtrain.fam3[,c(10,14)]
plot(df[,1],df[,2])
setwd("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/ang_balsam_set/Enrichment/all_snps/goterm2snp/")
library(SNP2GO)
library(piano)
setwd("/Volumes/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/")
setwd("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/")
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/cand_forSNP2GO.vcf",header=T,comment.char="#")
# Read the VCF file and construct a GenomicRanges object:
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/cand_forSNP2GO.vcf",header=T,comment.char="#")
cand[,2] <- as.numeric(cand[,2])
candsnps <- GRanges(seqnames=cand[,1],ranges=IRanges(cand[,2],cand[,2]))
non <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/noncand_forSNP2GO.vcf",header=F,comment.char="#")
non[,2] <- as.numeric(non[,2])
noncandsnps <- GRanges(seqnames=non[,1],ranges=IRanges(non[,2],non[,2]))
GBS_BayenvLFMM <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=50000)
write.table(file="/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results//Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/50kb_snp2go_gtf_Feb21.2018.out",GBS_BayenvLFMM$enriched,sep="\t",row.names=F, quote=F)
gtf.significant.terms <- GBS_BayenvLFMM$enriched$GO
gtf.significant.terms
print(GBS_BayenvLFMM$regions)
first.terms <- gtf.significant.terms[1:91]
first.terms
print(GBS_BayenvLFMM$regions)
write.table(file="~/Downloads/50kb_snp2go_gtf_Feb21.2018.out",GBS_BayenvLFMM$enriched,sep="\t",row.names=F, quote=F)
# Using a gtf formatted annotation file:
GBS_BayenvLFMM10k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=10000)
# Using a gtf formatted annotation file:
GBS_BayenvLFMM10k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=10000)
GBS_BayenvLFMM$enriched$GO
GBS_BayenvLFMM10K$enriched$GO
GBS_BayenvLFMM10k$enriched$GO
head(cand)
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand[,2] <- as.numeric(cand[,2])
candsnps <- GRanges(seqnames=cand[,1],ranges=IRanges(cand[,2],cand[,2]))
head(cand)
head(candsnps)
length(cand)
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand[,2] <- as.numeric(cand[,2])
dim(cand)
candsnps <- GRanges(seqnames=cand[,1],ranges=IRanges(cand[,2],cand[,2]))
candsnps
non <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/Core336/noncand_forSNP2GO.vcf",header=F,comment.char="#")
dim(non)
noncandsnps <- GRanges(seqnames=non[,1],ranges=IRanges(non[,2],non[,2]))
non[,2] <- as.numeric(non[,2])
noncandsnps <- GRanges(seqnames=non[,1],ranges=IRanges(non[,2],non[,2]))
GBS_BayenvLFMM10k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=10000)
write.table(file="~/Downloads/10kb_snp2go_gtf_Feb21.2018.out",GBS_BayenvLFMM$enriched,sep="\t",row.names=F, quote=F)
save(GBS_BayenvLFMM10k, file="GBS_BayenvLFMM10k.RData")
GBS_BayenvLFMM25k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=25000)
write.table(file="~/Downloads/25kb_snp2go_gtf_Feb21.2018.out",GBS_BayenvLFMM$enriched,sep="\t",row.names=F, quote=F)
save(GBS_BayenvLFMM10k, file="GBS_BayenvLFMM25k.RData")
GBS_BayenvLFMM$enriched
View(GBS_BayenvLFMM$enriched)
ratio <- GBS_BayenvLFMM$enriched$nc/GBS_BayenvLFMM$enriched$mc
ratio
ratio2 <- GBS_BayenvLFMM$enriched$g/GBS_BayenvLFMM$enriched$G
ratio2
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/RW_and_Core336/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand[,2] <- as.numeric(cand[,2])
candsnps <- GRanges(seqnames=cand[,1],ranges=IRanges(cand[,2],cand[,2]))
save(GBS_BayenvLFMM25k, file="GBS_BayenvLFMM25k.RData")
write.table(file="Core336_70UniqueOutliers_25kb_SNP2GO_Feb21.2018.out",GBS_BayenvLFMM25k$enriched,sep="\t",row.names=F, quote=F)
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/RW_and_Core336/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand[,2] <- as.numeric(cand[,2])
candsnps <- GRanges(seqnames=cand[,1],ranges=IRanges(cand[,2],cand[,2]))
non <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/BayenvLFMM_overlap/RW_and_Core336/noncand_forSNP2GO.vcf",header=F,comment.char="#")
non[,2] <- as.numeric(non[,2])
noncandsnps <- GRanges(seqnames=non[,1],ranges=IRanges(non[,2],non[,2]))
dim(cand)
dim(non)
GBS_BayenvLFMM25k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=25000)
View(GBS_BayenvLFMM$enriched)
cand <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/GWAS/BudFlush_20152016/cand_forSNP2GO.vcf",header=F,comment.char="#")
cand[,2] <- as.numeric(cand[,2])
candsnps <- GRanges(seqnames=cand[,1],ranges=IRanges(cand[,2],cand[,2]))
cand
non <- read.delim("/Volumes/kellrlab/datashare/BalsamPoplar/GBSdata/Results/Enrichment/SNP2GO/GWAS/BudFlush_20152016/noncand_forSNP2GO.vcf",header=F,comment.char="#")
non[,2] <- as.numeric(non[,2])
noncandsnps <- GRanges(seqnames=non[,1],ranges=IRanges(non[,2],non[,2]))
dim(non)
GBS_GWASBF25k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=25000)
GBS_GWASBF25k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=10000)
GBS_GWASBF25k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=5000)
GBS_BayenvLFMM$enriched
GBS_GWASBF25k$enriched
GBS_GWASBF25k <- snp2go(gtf="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_210_v3.0.forSNP2GO.gtf.gz",
goFile="/Volumes/kellrlab/datashare/PtrichoV3/annotation/Ptrichocarpa_GOterms_forSNP2GO.txt",
candidateSNPs=candsnps,
noncandidateSNPs=noncandsnps,
FDR=0.1,
runs=100000,
extension=50000)
GBS_GWASBF25k$enriched
setwd("/Volumes/kellrlab/datashare/BalsamPoplar/AssocMapping/GWAS/gemma/")
library(qvalue)
library(qqman)
gemmaRW <- read.table("/Volumes/kellrlab/datashare/BalsamPoplar/AssocMapping/GWAS/gemma/output/BFRW_MAF01_1516.assoc.txt", header=T)
qobj <- qvalue(gemmaRW$p_wald)
gemmaRW$q <- qobj$qvalue
manhattan(gemmaRW, chr="chr", bp="ps", p="p_wald", snp="rs", logp=T,
suggestiveline=F, genomewideline=F,
annotatePval=-log10(0.0001),
col=c("darkblue", "gray"),
highlight=gemmaRW$rs[which(gemmaRW$q<0.1)],
main="GWAS: 'GEMMA' on cGDD@BF from 437 inds from the range-core (maf>0.01)", cex.main=0.9)
400/27
?lmer
library(lmer)
library(lme4)
?ranef
?do.call
install.packages("pophelper")
# install dependencies and devtools
install.packages(c("Cairo","ggplot2","gridExtra","gtable","tidyr","devtools"),dependencies=T)
# install pophelper package from GitHub
devtools::install_github('royfrancis/pophelper')
# load library for use
library(pophelper)
install.packages("Cairo")
devtools::install_github('royfrancis/pophelper')
library(dylib)
version()
Rversion
version
setwd("/Users/srkeller/github/PBIO381_srkeller_labnotebook_2018/myresults/")
library(vcfR)
library(adegenet)
vcf1 <- read.vcfR("OTAU_2018_reads2snps_DP10GP95_biallelic_MAF01_Miss0.8.vcf.recode.vcf")
gl1 <- vcfR2genlight(vcf1)
print(gl1)
gl1$ind.names
gl1$loc.names[1:10]
gl1$chromosome[1:3]
gl1$pop
#Nothing in the field termed "pop"...need to fix that:
meta <- read.table("cols_data.txt", header=T)
meta = meta[order(meta$sample_ID),] # sort the file by sample ID
gl1$ind.names
meta$sample_ID
gl1$pop <- meta$population
gl1$pop
# Compute the PCA
pca1 <- glPca(gl1, nf=2, parallel=F,useC=T) # nf= # PC axes to retain
plot(pca1$scores[,1], pca1$scores[,2],
cex=2, pch=20, col=gl1$pop,
xlab="PC1", ylab="PC2",
main="PCA on beetle SNPs")
legend("topleft",
legend=unique(gl1$pop),
pch=20,
col=unique(gl1$pop))
plot(pca1$scores[,1], pca1$scores[,2],
cex=2, pch=20, col=gl1$pop,
xlab="PC1", ylab="PC2",
main="PCA on beetle SNPs")
legend("bottomleft",
legend=unique(gl1$pop),
pch=20,
col=unique(gl1$pop))
plot(pca1$scores[,1], pca1$scores[,2],
cex=1.2, pch=20, col=gl1$pop,
xlab="PC1", ylab="PC2",
main="PCA on beetle SNPs")
legend("bottomleft",
legend=unique(gl1$pop),
pch=20,
col=unique(gl1$pop))
library(pophelper)
setwd("/Users/srkeller/github/PBIO381_srkeller_labnotebook_2018/myresults/")
admixfiles=list.files(path=("ADMIXTURE/"),full.names=T)
admixfiles
admixlist=readQ(files=admixfiles,filetype="basic")
# metadata: sample id and pop from beetle.pop file
metadata=read.table("cols_data.txt",header=T)
head(metadata)
# format metadata to a data frame and ind variables as chars. for plotting
metadata2=data.frame(sampleid=metadata[,1], population=metadata[,2])
metadata2$sampleid=as.character(metadata2$sampleid)
metadata2$population=as.character(metadata2$population)
if(length(unique(sapply(admixlist,nrow)))==1)
admixlist <- lapply(admixlist,"rownames<-",metadata2$sampleid)
head(admixlist[[3]])
admixfiles
p <- plotQ(admixlist[c(1,2,3,4)],
returnplot=T,exportplot=T,quiet=T,basesize=11, imgoutput="join",
showyaxis=T, showticks=T, panelspacer=0.4, useindlab=F, showindlab=F,
grplab=metadata2[2], grplabsize=4, linesize=1, barsize=1, pointsize=3,
panelratio=c(4,1), divsize = 0.75, pointcol="white", showtitle=T,
titlelab="ADMIXTURE analysis on O. tauri, SNPs thinned to 1 per kb",
splab=c("K=2","K=3","K=4","K=5"), outputfilename="ADMIXTURE_Otauri",
imgtype="pdf",height=3,width=25)
p <- plotQ(admixlist[c(1,2,3)],
returnplot=T,exportplot=T,quiet=T,basesize=11, imgoutput="join",
showyaxis=T, showticks=T, panelspacer=0.4, useindlab=F, showindlab=F,
grplab=metadata2[2], grplabsize=4, linesize=1, barsize=1, pointsize=3,
panelratio=c(4,1), divsize = 0.75, pointcol="white", showtitle=T,
titlelab="ADMIXTURE analysis on O. tauri, SNPs thinned to 1 per kb",
splab=c("K=2","K=3","K=4","K=5"), outputfilename="ADMIXTURE_Otauri",
imgtype="pdf",height=3,width=25)
p <- plotQ(admixlist[c(1,2,3)],
returnplot=T,exportplot=T,quiet=T,basesize=11, imgoutput="join",
showyaxis=T, showticks=T, panelspacer=0.4, useindlab=F, showindlab=F,
grplab=metadata2[2], grplabsize=4, linesize=1, barsize=1, pointsize=3,
panelratio=c(4,1), divsize = 0.75, pointcol="white", showtitle=T,
titlelab="ADMIXTURE analysis on O. tauri, SNPs thinned to 1 per kb",
splab=c("K=2","K=3","K=4"), outputfilename="ADMIXTURE_Otauri",
imgtype="pdf",height=3,width=25)
plot(p$plot[[1]])
